

import * as React from "react";
import { useState } from 'react';
import { ThemeProvider, ThemeContext } from '../../wrapper/ThemeContext';
import { motion } from "framer-motion";
import { COLORS } from '../../constants';
const DarkToggle = () => {
  const { colorMode, setColorMode } = React.useContext(ThemeContext);
  const [dark, setDark] = useState(false);
  const themeColor = colorMode;
  const button = {

    rest: { scale: 1.0 },
    hover: { scale: 1.1 },
    pressed: { scale: 1.3 }
  };
  const moonMove = {
    rest: { x: 15, y: 2 },

    pressed: { x: -15, y: 0, scale: 1.3 }
  };

  const crown = {
    rest: { scale: 1, x: 19, y: 5, opacity: 1 },

    pressed: { x: 19, y: 5, opacity: 0 }
  };




  /* if (!colorMode) {
    return null;
  } */

  return (
    <div className="dark-mode-toggler">
      {/* <input
        className={"check-box"}
        type="checkbox"
        checked={colorMode === 'dark'}
        onChange={ev => {
          setDark(!dark)
          setColorMode(dark? 'dark' : 'light');
        }}
      /> */}
      <div className="moon-sun-container">
        <motion.svg
          onClick={() => {
            setDark(!dark)
            setColorMode(dark? 'dark' : 'light')}
          }
          className="crown"
          variants={crown}
          whileHover="hover"
          whileTap="pressed"
          animate={!dark ? "pressed" : "rest"}
          initial={dark ? "pressed" : "rest"}
          viewBox="0 0 244.481 244.481"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="UnoptimicedTransforms"
            transform="translate(63.696 -27.543) scale(.56091)"
            d="M217.458 267.036c11.152 7.418 18.158 11.265 27.755 11.28 9.142.015 18.997-3.703 31.996-9.982-9.969 18.96-21.58 31.223-32.804 37.545-11.513 6.484-23.048 7.18-35.981 2.969 3.709-8.115 5.768-15.183 6.963-20.602 1.177-5.336 2.318-12.691 2.071-21.21zm-8.935 41.856c6.65 11.358 11.872 17.75 20.55 21.497 8.386 3.62 18.877 4.11 32.966 3.776-16.084 12.844-31.396 19.783-44.272 21.52-13.193 1.781-24.302-1.64-34.98-10.237a130.932 130.932 0 0 0 14.593-17.258c3.309-4.687 7.458-11.235 11.143-19.298zm-25.659 36.634c2.077 13.156 4.841 21.091 11.626 27.64 6.61 6.38 16.29 10.547 29.636 15.374-19.688 6.096-36.425 7.269-49.112 4.372-12.966-2.961-21.999-10.052-28.828-21.827 8.074-3.642 14.64-7.757 19.342-11.044a130.908 130.908 0 0 0 17.336-14.515zm-36.633 25.659c-2.574 12.908-2.924 21.195.982 29.71 3.808 8.301 11.245 15.6 22.008 24.814-20.738-1.302-36.71-6.3-47.324-13.901-10.707-7.667-16.14-18.052-17.523-31.798v-.001c8.51.292 15.869-.81 21.21-1.96 5.426-1.168 12.507-3.192 20.647-6.864zm-41.857 8.934c-7.418 11.152-11.265 18.158-11.28 27.755-.015 9.143 3.703 18.997 9.982 31.996-18.96-9.969-31.224-21.58-37.545-32.804-6.484-11.512-7.18-23.048-2.969-35.981 8.115 3.709 15.183 5.768 20.602 6.964 5.336 1.177 12.691 2.318 21.21 2.07m-41.856-8.934c-11.359 6.649-17.75 11.871-21.497 20.55-3.621 8.385-4.11 18.876-3.776 32.965-12.844-16.084-19.783-31.396-21.52-44.271-1.781-13.193 1.64-24.303 10.237-34.981A130.933 130.933 0 0 0 43.22 360.04c4.687 3.31 11.235 7.459 19.298 11.144zm-36.634-25.66c-13.156 2.077-21.091 4.842-27.64 11.626-6.38 6.61-10.547 16.29-15.374 29.637-6.096-19.689-7.269-36.426-4.372-49.112 2.961-12.967 10.052-22 21.827-28.828 3.642 8.073 7.757 14.639 11.044 19.342a130.908 130.908 0 0 0 14.515 17.335zM.225 308.892c-12.908-2.574-21.195-2.924-29.71.983-8.301 3.807-15.6 11.244-24.814 22.007 1.302-20.738 6.3-36.71 13.9-47.323 7.668-10.707 18.052-16.14 31.798-17.523h.002c-.292 8.509.81 15.868 1.96 21.21 1.168 5.425 3.192 12.506 6.864 20.646zm-8.934-41.856c-11.152-7.42-18.158-11.266-27.755-11.281-9.143-.015-18.997 3.704-31.996 9.982 9.969-18.96 21.58-31.223 32.804-37.545 11.513-6.484 23.048-7.18 35.981-2.968-3.709 8.114-5.768 15.182-6.964 20.602-1.177 5.335-2.318 12.69-2.07 21.21zm8.934-41.857c-6.649-11.358-11.871-17.75-20.55-21.497-8.385-3.62-18.876-4.11-32.965-3.776 16.084-12.844 31.396-19.782 44.272-21.52 13.193-1.78 24.302 1.64 34.98 10.238A130.932 130.932 0 0 0 11.37 205.88c-3.31 4.687-7.458 11.235-11.144 19.298zm25.66-36.633c-2.077-13.156-4.841-21.092-11.626-27.64-6.61-6.38-16.29-10.548-29.636-15.375 19.688-6.096 36.425-7.268 49.112-4.371 12.966 2.96 21.999 10.052 28.828 21.826-8.074 3.643-14.64 7.758-19.343 11.044a130.908 130.908 0 0 0-17.335 14.516zm36.633-25.66c2.574-12.908 2.924-21.195-.983-29.71-3.807-8.3-11.244-15.6-22.007-24.814 20.738 1.303 36.71 6.301 47.323 13.901 10.707 7.667 16.14 18.05 17.523 31.796v.003c-8.509-.292-15.868.81-21.21 1.96-5.425 1.168-12.506 3.193-20.646 6.865zm41.857-8.934c7.418-11.152 11.265-18.158 11.28-27.754.015-9.143-3.703-18.998-9.982-31.997 18.96 9.97 31.223 21.58 37.545 32.804 6.484 11.513 7.18 23.048 2.969 35.982-8.115-3.71-15.183-5.769-20.602-6.964-5.336-1.177-12.691-2.318-21.21-2.071zm41.856 8.935c11.358-6.65 17.75-11.872 21.497-20.55 3.62-8.386 4.11-18.877 3.776-32.966 12.844 16.084 19.783 31.397 21.52 44.272 1.78 13.193-1.64 24.303-10.237 34.981a130.932 130.932 0 0 0-17.258-14.594c-4.687-3.309-11.235-7.458-19.298-11.143zm36.633 25.66c13.156-2.078 21.092-4.842 27.64-11.627 6.38-6.61 10.548-16.29 15.375-29.636 6.096 19.689 7.269 36.426 4.372 49.112-2.961 12.966-10.053 22-21.827 28.828-3.642-8.073-7.758-14.64-11.044-19.342a130.907 130.907 0 0 0-14.516-17.336zm25.66 36.633c12.908 2.574 21.195 2.923 29.71-.983 8.3-3.807 15.6-11.244 24.814-22.008-1.303 20.74-6.301 36.711-13.902 47.325-7.667 10.707-18.052 16.14-31.798 17.522.292-8.51-.81-15.868-1.96-21.21-1.168-5.425-3.192-12.507-6.864-20.646z"
            style={{
              fill: COLORS.primary[themeColor],
              stroke: "#000",
              strokeWidth: 2.165,
              strokeDasharray: "none",
              strokeOpacity: 1,
              paintOrder: "fill markers stroke"
            }}
          />
          <path
            className="UnoptimicedTransforms"
            transform="matrix(-.6545 .08002 .08002 .6545 169.186 -60.883)"
            d="M200.508 267.036c3.26 9.35 4.949 16.48 8.35 23.839 3.168 6.852 7.417 12.633 13.995 16.422 6.442 3.712 15.574 5.661 27.271 3.362 11.376-2.236 26.793-8.958 42.481-24.402-16.389 30.562-38.187 46.45-54.025 54.07-16.455 7.918-30.518 9.128-39.87 8.25-9.633-.905-16.123-4.084-19.829-7.156-3.798-3.15-5.202-6.532-4.809-9.202 6.125-6.423 14.594-17.332 20.352-31.286 5.9-14.297 6.548-25.795 6.084-33.897zm-29.592 66.541c-5.33 8.957-9.641 16.582-12.145 24.077-2.463 7.37-3.145 14.642-.792 21.853 2.32 7.111 7.824 14.619 18.083 20.812 10.057 6.072 25.855 11.43 47.343 11.5-25.064 7.973-46.94 8.2-63.041 5.627-16.349-2.613-28.296-8.256-36.373-13.972-16.1-11.395-19.602-24.498-19.617-30.854v-.089c.01-3.926 1.177-6.616 2.844-7.946 8.192.118 20.033-1.76 33.813-8.769 13.636-6.935 23.608-15.998 29.885-22.239zm-66.542 29.593c-9.35 3.26-16.48 4.948-23.839 8.35-6.852 3.167-12.633 7.417-16.422 13.994-3.712 6.443-5.661 15.575-3.362 27.272 2.236 11.376 8.958 26.792 24.402 42.48-30.562-16.388-46.45-38.186-54.07-54.024-7.918-16.456-9.128-30.519-8.25-39.87.905-9.633 4.084-16.123 7.156-19.83 3.15-3.797 6.532-5.202 9.202-4.809 6.423 6.125 17.332 14.595 31.286 20.352 14.297 5.9 25.796 6.548 33.897 6.085m-66.541-29.593c-8.957-5.33-16.582-9.641-24.077-12.145-7.37-2.462-14.642-3.145-21.853-.792-7.111 2.32-14.619 7.825-20.812 18.083-6.072 10.058-11.43 25.856-11.5 47.343-7.97-25.053-8.2-46.92-5.63-63.02 2.61-16.345 8.247-28.293 13.96-36.372 11.388-16.105 24.49-19.618 30.85-19.638h.126c3.917.012 6.6 1.178 7.928 2.844-.118 8.191 1.76 20.032 8.769 33.812 6.935 13.636 15.998 23.609 22.239 29.885zM8.24 267.036c-6.188-17.753-9.209-32.694-22.344-40.262-6.443-3.711-15.575-5.66-27.272-3.362-11.376 2.236-26.792 8.958-42.48 24.402 16.388-30.561 38.187-46.45 54.024-54.07 16.456-7.918 30.519-9.127 39.87-8.25 9.633.906 16.124 4.084 19.83 7.157 3.798 3.149 5.202 6.532 4.809 9.202-6.125 6.423-14.594 17.332-20.352 31.285-5.9 14.298-6.548 25.796-6.085 33.898m29.593-66.542c10.4-17.48 17.674-31.414 12.937-45.93-2.32-7.11-7.825-14.618-18.083-20.812-10.058-6.072-25.855-11.43-47.343-11.5 25.045-7.967 46.906-8.2 63.003-5.633 16.344 2.607 28.292 8.241 36.373 13.952 16.109 11.383 19.63 24.484 19.654 30.847v.154c-.015 3.91-1.18 6.588-2.844 7.914-8.19-.117-20.032 1.76-33.812 8.77-13.636 6.935-23.608 15.998-29.885 22.238zm66.541-29.592c17.753-6.189 32.694-9.21 40.262-22.345 3.712-6.442 5.661-15.574 3.362-27.271-2.236-11.376-8.958-26.793-24.402-42.48 30.562 16.388 46.45 38.186 54.07 54.024 7.918 16.456 9.128 30.518 8.25 39.87-.905 9.633-4.084 16.123-7.157 19.829-3.149 3.798-6.531 5.202-9.201 4.81-6.424-6.126-17.333-14.595-31.286-20.353-14.297-5.9-25.796-6.548-33.898-6.084m66.542 29.592c17.48 10.401 31.414 17.674 45.93 12.937 7.11-2.32 14.619-7.824 20.812-18.082 6.072-10.058 11.43-25.856 11.5-47.343 10.189 32.028 7.795 58.669 2.767 75.802-5.182 17.657-13.785 28.446-21.029 34.456-7.37 6.114-14.373 8.281-19.171 8.693-4.941.423-8.287-.866-9.801-2.765.117-8.191-1.76-20.033-8.769-33.813-6.936-13.636-15.999-23.608-22.239-29.885z"
            style={{
              fill: COLORS.primary[themeColor],
              stroke: "#000",
              strokeWidth: 2.165,
              strokeDasharray: "none",
              strokeOpacity: 1,
              paintOrder: "fill markers stroke"
            }}
          /></motion.svg>

        <motion.button
          className="toggle"
          animate={!dark ? "pressed" : "rest"}
          onClick={() => {
            setDark(!dark)
            setColorMode(dark? 'dark' : 'light')}
          }
          variants={button}
          initial="rest"

        ></motion.button>

        <motion.div
          className="moon"
          variants={moonMove}
          animate={!dark ? "pressed" : "rest"}
          initial={dark ? "pressed" : "rest"}
          transition={{ ease: "easeInOut", duration: 0.5 }}
          onClick={() => {
            setDark(!dark)
            setColorMode(dark? 'dark' : 'light')}
          }
        />

      </div>
    </div>
  );
};

export default DarkToggle;